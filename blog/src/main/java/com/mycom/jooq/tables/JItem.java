/*
 * This file is generated by jOOQ.
 */
package com.mycom.jooq.tables;


import com.mycom.jooq.JSpbooter;
import com.mycom.jooq.Keys;
import com.mycom.jooq.tables.records.JItemRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JItem extends TableImpl<JItemRecord> {

    private static final long serialVersionUID = -1603809977;

    /**
     * The reference instance of <code>SPBOOTER.ITEM</code>
     */
    public static final JItem ITEM = new JItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JItemRecord> getRecordType() {
        return JItemRecord.class;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JItemRecord, Object> ITEMNO = createField(DSL.name("ITEMNO"), org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JItemRecord, Object> NUM = createField(DSL.name("NUM"), org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JItemRecord, Object> PICTURE = createField(DSL.name("PICTURE"), org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JItemRecord, Object> PRICE = createField(DSL.name("PRICE"), org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JItemRecord, Object> TYPE = createField(DSL.name("TYPE"), org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JItemRecord, Object> NO = createField(DSL.name("NO"), org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * Create a <code>SPBOOTER.ITEM</code> table reference
     */
    public JItem() {
        this(DSL.name("ITEM"), null);
    }

    /**
     * Create an aliased <code>SPBOOTER.ITEM</code> table reference
     */
    public JItem(String alias) {
        this(DSL.name(alias), ITEM);
    }

    /**
     * Create an aliased <code>SPBOOTER.ITEM</code> table reference
     */
    public JItem(Name alias) {
        this(alias, ITEM);
    }

    private JItem(Name alias, Table<JItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private JItem(Name alias, Table<JItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JItem(Table<O> child, ForeignKey<O, JItemRecord> key) {
        super(child, key, ITEM);
    }

    @Override
    public Schema getSchema() {
        return JSpbooter.SPBOOTER;
    }

    @Override
    public UniqueKey<JItemRecord> getPrimaryKey() {
        return Keys.PK_ITEM;
    }

    @Override
    public List<UniqueKey<JItemRecord>> getKeys() {
        return Arrays.<UniqueKey<JItemRecord>>asList(Keys.PK_ITEM);
    }

    @Override
    public JItem as(String alias) {
        return new JItem(DSL.name(alias), this);
    }

    @Override
    public JItem as(Name alias) {
        return new JItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JItem rename(String name) {
        return new JItem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JItem rename(Name name) {
        return new JItem(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Object, Object, Object, Object, Object, Object> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
