/*
 * This file is generated by jOOQ.
 */
package com.mycom.jooq.tables;


import com.mycom.jooq.JSpbooter;
import com.mycom.jooq.tables.records.JUser1FriendRequestRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JUser1FriendRequest extends TableImpl<JUser1FriendRequestRecord> {

    private static final long serialVersionUID = 2104537765;

    /**
     * The reference instance of <code>SPBOOTER.USER1_FRIEND_REQUEST</code>
     */
    public static final JUser1FriendRequest USER1_FRIEND_REQUEST = new JUser1FriendRequest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JUser1FriendRequestRecord> getRecordType() {
        return JUser1FriendRequestRecord.class;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JUser1FriendRequestRecord, Object> USER_USERNO = createField(DSL.name("USER_USERNO"), org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JUser1FriendRequestRecord, Object> FRIEND_REQUEST_FRIEND_NO = createField(DSL.name("FRIEND_REQUEST_FRIEND_NO"), org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * Create a <code>SPBOOTER.USER1_FRIEND_REQUEST</code> table reference
     */
    public JUser1FriendRequest() {
        this(DSL.name("USER1_FRIEND_REQUEST"), null);
    }

    /**
     * Create an aliased <code>SPBOOTER.USER1_FRIEND_REQUEST</code> table reference
     */
    public JUser1FriendRequest(String alias) {
        this(DSL.name(alias), USER1_FRIEND_REQUEST);
    }

    /**
     * Create an aliased <code>SPBOOTER.USER1_FRIEND_REQUEST</code> table reference
     */
    public JUser1FriendRequest(Name alias) {
        this(alias, USER1_FRIEND_REQUEST);
    }

    private JUser1FriendRequest(Name alias, Table<JUser1FriendRequestRecord> aliased) {
        this(alias, aliased, null);
    }

    private JUser1FriendRequest(Name alias, Table<JUser1FriendRequestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JUser1FriendRequest(Table<O> child, ForeignKey<O, JUser1FriendRequestRecord> key) {
        super(child, key, USER1_FRIEND_REQUEST);
    }

    @Override
    public Schema getSchema() {
        return JSpbooter.SPBOOTER;
    }

    @Override
    public JUser1FriendRequest as(String alias) {
        return new JUser1FriendRequest(DSL.name(alias), this);
    }

    @Override
    public JUser1FriendRequest as(Name alias) {
        return new JUser1FriendRequest(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JUser1FriendRequest rename(String name) {
        return new JUser1FriendRequest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JUser1FriendRequest rename(Name name) {
        return new JUser1FriendRequest(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Object, Object> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
